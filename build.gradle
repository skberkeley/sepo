plugins {
    id 'java'
    id "io.freefair.lombok" version "8.4"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    // try to resolve by pom first
    mavenCentral {
        metadataSources {
            mavenPom()
        }
    }
    // try to get artifacts if no useful pom is found
    mavenCentral {
        metadataSources {
            artifact()
        }
    }
    ivy {
        url "https://www.sosy-lab.org/ivy"
        patternLayout {
            artifact "/[organisation]/[module]/[classifier]-[revision].[ext]"
            // ivy "/[organisation]/[module]/ivy-[revision].xml"
        }
        metadataSources {
            artifact()
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
}

dependencies {
    implementation 'junit:junit:4.12'
    implementation 'org.sosy-lab:java-smt:4.0.3'
    implementation group: 'io.github.uuverifiers', name: 'princess_2.13', version: '2021-11-15', ext: 'jar'
    implementation 'com.google.code.gson:gson:2.10.1'
}

configurations {
    // Use a custom config that inherits all dependencies from runtimeOnly and implementation.
    // If you want to seperate your dependencies from the JavaSMT ones
    // simply use it when pulling the dependencies.
    javaSMTConfig.extendsFrom(runtimeOnly, implementation)
}

// Copy and rename all JavaSMT dependencies
// This is necassary as Gradle renames the JavaSMT dependencies, but we need them to have certain names,
// and they need to be in a specific location for JavaSMT to be found (the easiest ist the same folder)
// For more information about this look up the sosy-commons loading process
task copyDependencies(type: Copy) {
    // Delete old dependencies as they might cause trouble
    dependsOn 'cleanDownloadedDependencies'
    from configurations.javaSMTConfig
    into 'build/dependencies'
    // Renames the dependencies
    rename '.*(lib[^-]*)-?.*.so', '$1.so'
}

// Cleans the dependencies folder
task cleanDownloadedDependencies(type: Delete) {
    delete fileTree('build/dependencies')
}

// Copy the JavaSMT depdendencies before using them, to do this we declare a dependency on the copy task of ours here
compileJava.dependsOn copyDependencies

// When clean is called we want to delete our copied JavaSMT files
clean.dependsOn cleanDownloadedDependencies

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
sourceCompatibility = '17.PREVIEW'
targetCompatibility = '17.PREVIEW'
